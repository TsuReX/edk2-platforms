[Defines]
DEFINE PLATFORM_PKG             = MinPlatformPkg

# 0x00000060 = (EFI_FIRMWARE_VOLUME_HEADER. HeaderLength + sizeof (EFI_FFS_FILE_HEADER))
DEFINE FDF_FIRMWARE_HEADER_SIZE = 0x00000060

SET gMinPlatformPkgTokenSpaceGuid.PcdMicrocodeOffsetInFv              = 0x90 # FV Header plus FFS header

DEFINE VPD_HEADER_SIZE = 0x00000090

!if $(FSP_MODE) == 0
  DEFINE FSP_BIN_DIR = Api
!else
  DEFINE FSP_BIN_DIR = "Dispatch"
!endif

# 16MiB Total FLASH Image (visible in memory mapped IO)
#
SET gMinPlatformPkgTokenSpaceGuid.PcdFlashAreaBaseAddress  = 0xFF000000
SET gMinPlatformPkgTokenSpaceGuid.PcdFlashAreaSize         = 0x01000000

################################################################################
#
#    FD SECPEI
#
# Contains all the SEC and PEI modules
#
# Layout: (Low address to high address)
#
#     FvBsp for board specific components
#     FvPostMemory for compressed post memory MinPlatform spec required components
#     FvFspS for compressed post memory silicon initialization components
#     FvPostMemorySilicon for silicon components
#     FvFspM for pre memory silicon initialization components
#     FvPreMemorySilicon for silicon components
#     FvFspT for temp RAM silicon initilization components
#     FvBspPreMemory for board specific components required to intialize memory
#     FvAdvancedPreMemory FV for advanced features components
#     FvPreMemory for components required by MinPlatform spec and to initialize memory
#     FvPreMemorySecurity FV for stage 6 required components contains reset vector
#
################################################################################

[FD.SecPei]
  BaseAddress   = 0xFFCA0000   |gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiBase                 #The base address of the FLASH Device
  Size          = 0x00360000   |gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiSize                 #The size in bytes of the FLASH Device
  ErasePolarity = 1
  BlockSize     = 0x1000
  NumBlocks     = 0x360

  #
  # These must add up to the FD Size.
  # This makes it easy to adjust the various sizes without having to manually calculate the offsets.
  # At this time, the FSP FV must be aligned at the same address they were built to, 0xFFD00000
  # This will be corrected in the future.
  #

  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspSize           = 0x00010000 # BaseAddress + PcdFlashFvBspSize + PcdFlashFvPostMemorySize must = 0xFFD00000
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemorySize    = 0x00010000 # BaseAddress + PcdFlashFvBspSize + PcdFlashFvPostMemorySize must = 0xFFD00000
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSSize          = 0x00040000 # Size must match WhitleyFspPkg.fdf content
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize          = 0x00221000 # Size must match WhitleyFspPkg.fdf content
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTSize          = 0x00006000 # Size must match WhitleyFspPkg.fdf content
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemorySize  = 0x00010000
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemorySize     = gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiSize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspSize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemorySize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSSize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTSize - gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemorySize

  #
  # Calculate Offsets Once (Do not modify)
  # This layout is specified by the EDK II Minimum Platform Archicture specification.
  # Each offset is the prior region's offset plus the prior region's size.
  #
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspOffset           = 0x00000000
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemoryOffset    = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspOffset           + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSOffset          = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemoryOffset    + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemorySize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMOffset          = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSOffset          + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTOffset          = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMOffset          + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemoryOffset  = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTOffset          + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemoryOffset     = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemoryOffset  + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemorySize

  #
  # FV Layout (Do not modify)
  # This layout is specified by the EDK II Minimum Platform Archicture specification.
  #

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspSize
  FV = FvBsp

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemoryOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemorySize
  FV = FvPostMemory

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSSize
  FILE = $(FSP_BIN_PKG)/Fsp_Rebased_S.fd

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize
  FILE = $(FSP_BIN_PKG)/Fsp_Rebased_M.fd

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTSize
  FILE = $(FSP_BIN_PKG)/Fsp_Rebased_T.fd

  #
  # Shared FV layout
  #

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemoryOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemorySize
  FV = FvBspPreMemory

  gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemoryOffset|gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemorySize
  FV = FvPreMemory

  #
  # Calculate base addresses (Do not modify)
  # This layout is specified by the EDK II Minimum Platform Archicture specification.
  # Each base is the prior region's base plus the prior region's size.
  #
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspBase             = gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspOffset
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemoryBase      = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSBase            = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemoryBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPostMemorySize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMBase            = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTBase            = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemoryBase    = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTSize
  SET gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemoryBase       = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemoryBase + gMinPlatformPkgTokenSpaceGuid.PcdFlashFvBspPreMemorySize

  #
  # Set duplicate PCD
  # These should not need to be changed
  #

  SET gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcNormalBase = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMBase
  SET gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcNormalSize = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMSize
  SET gCpPlatFlashTokenSpaceGuid.PcdFlashFvSecPeiBase    = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemoryBase
  SET gCpPlatFlashTokenSpaceGuid.PcdFlashFvSecPeiSize    = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvPreMemorySize

  #
  # For API mode, wrappers have some duplicate PCD as well
  #
  SET gIntelFsp2WrapperTokenSpaceGuid.PcdFspsBaseAddress = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspSBase
  SET gIntelFsp2WrapperTokenSpaceGuid.PcdFspmBaseAddress = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspMBase
  SET gIntelFsp2WrapperTokenSpaceGuid.PcdFsptBaseAddress = gMinPlatformPkgTokenSpaceGuid.PcdFlashFvFspTBase

################################################################################

[FV.FvSecurityPreMemory]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = 40ab290f-8494-41cf-b302-31b178b4ce0b

[FV.FvPreMemory]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = 6522280D-28F9-4131-ADC4-F40EBFA45864

  INF  UefiCpuPkg/SecCore/SecCore.inf
  INF  MdeModulePkg/Core/Pei/PeiMain.inf

  INF  MdeModulePkg/Universal/PCD/Pei/Pcd.inf
  INF  EagleStreamOpenBoardPkg/Universal/PeiExStatusCodeRouter/ExReportStatusCodeRouterPei.inf
  INF  EagleStreamOpenBoardPkg/Universal/PeiExStatusCodeHandler/ExStatusCodeHandlerPei.inf

  INF  UefiCpuPkg/CpuIoPei/CpuIoPei.inf

  INF  MdeModulePkg/Universal/Variable/Pei/VariablePei.inf
  INF  MdeModulePkg/Universal/FaultTolerantWritePei/FaultTolerantWritePei.inf

  INF  EagleStreamOpenBoardPkg/BiosInfo/BiosInfo.inf

  INF  WhitleySiliconPkg/Pch/SouthClusterLbg/MultiPch/Pei/MultiPchPei.inf

#  FILE PEIM = ac4b7f1b-e057-47d3-b2b5-1137493c0f38 {
#  SECTION PEI_DEPEX = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/ac4b7f1b-e057-47d3-b2b5-1137493c0f38DynamicSiLibrary.depex
#  SECTION Align = 32 PE32 = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/ac4b7f1b-e057-47d3-b2b5-1137493c0f38DynamicSiLibrary.efi
#  SECTION UI = "DynamicSiLibraryPei"
# }

  INF  EagleStreamOpenBoardPkg/Features/Variable/PlatformVariable/Pei/PlatformVariableInitPei.inf

  INF  EagleStreamOpenBoardPkg/Platform/Pei/EmulationPlatformInit/EmulationPlatformInit.inf

  INF  EagleStreamOpenBoardPkg/Platform/Pei/PlatformInfo/PlatformInfo.inf

  #
  # UBA common and board specific components
  #
  !include EagleStreamOpenBoardPkg/Uba/UbaPei.fdf

  INF  MinPlatformPkg/PlatformInit/PlatformInitPei/PlatformInitPreMem.inf

  INF  MinPlatformPkg/PlatformInit/ReportFv/ReportFvPei.inf

#  FILE PEIM = ca8efb69-d7dc-4e94-aad6-9fb373649161 {
#    SECTION PEI_DEPEX = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/ca8efb69-d7dc-4e94-aad6-9fb373649161SiliconPolicyInitPreAndPostMem.depex
#    SECTION Align = 32 PE32 = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/ca8efb69-d7dc-4e94-aad6-9fb373649161SiliconPolicyInitPreAndPostMem.efi
#    SECTION UI = "SiliconPolicyInitPreAndPostMem"
#  }

  INF  MinPlatformPkg/PlatformInit/SiliconPolicyPei/SiliconPolicyPeiPreMem.inf

  !include EagleStreamOpenBoardPkg/Include/Fdf/EnablePerformanceMonitoringInfrastructurePreMemory.fdf

  INF EagleStreamOpenBoardPkg/Universal/PeiInterposerToSvidMap/PeiInterposerToSvidMap.inf

  INF  RuleOverride = LzmaCompress UefiCpuPkg/CpuMpPei/CpuMpPei.inf

  !if $(FSP_MODE) == 0
    FILE PEIM = 8F7F3D20-9823-42DD-9FF7-53DAC93EF407 {
      SECTION PEI_DEPEX = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/8F7F3D20-9823-42DD-9FF7-53DAC93EF407CsrPseudoOffsetInitPeim.depex
      SECTION Align = 32 PE32 = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/8F7F3D20-9823-42DD-9FF7-53DAC93EF407CsrPseudoOffsetInitPeim.efi
      SECTION UI = "CsrPseudoOffsetInitPeim"
    }
    FILE PEIM = 2C6CACC6-6C3C-4AA7-B2DE-384DAE2B0352 {
      SECTION PEI_DEPEX = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/2C6CACC6-6C3C-4AA7-B2DE-384DAE2B0352RegAccessPeim.depex
      SECTION Align = 32 PE32 = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/2C6CACC6-6C3C-4AA7-B2DE-384DAE2B0352RegAccessPeim.efi
      SECTION UI = "RegAccessPeim"
    }
    FILE PEIM = C7D9BAF4-DC9D-4B22-B4E7-7500EAA7B67F {
      SECTION PEI_DEPEX = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/C7D9BAF4-DC9D-4B22-B4E7-7500EAA7B67FSiliconDataInitPeim.depex
      SECTION Align = 32 PE32 = $(FSP_BIN_PKG)/UefiDrivers/$(FSP_BIN_DIR)/C7D9BAF4-DC9D-4B22-B4E7-7500EAA7B67FSiliconDataInitPeim.efi
      SECTION UI = "SiliconDataInitPeim"
    }
    INF  IntelFsp2WrapperPkg/FspmWrapperPeim/FspmWrapperPeim.inf
    INF  IntelFsp2WrapperPkg/FspsWrapperPeim/FspsWrapperPeim.inf
    INF  MdeModulePkg/Core/DxeIplPeim/DxeIpl.inf
    INF  EagleStreamOpenBoardPkg/Platform/Pei/DummyPchSpi/DummyPchSpi.inf
  !endif

  FILE FV_IMAGE = 40ab290f-8494-41cf-b302-31b178b4ce0b {
    SECTION FV_IMAGE = FvSecurityPreMemory
  }

[FV.FvAdvancedPreMemory]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = 09f25d44-b2ef-4225-8b2e-e0e094b51775

  !include AdvancedFeaturePkg/Include/PreMemory.fdf

[FV.FvBspPreMemory]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = e6c65995-8c2d-4119-a52d-7dbf1acb45a1

  FILE FV_IMAGE = 09f25d44-b2ef-4225-8b2e-e0e094b51775 {
    SECTION FV_IMAGE = FvAdvancedPreMemory
  }

#
# FvPostMemory includes common hardware, common core variable services, load and invoke DXE etc
#
[FV.FvPostMemoryUncompressed]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = B4705B4B-0BE6-4BDB-A83A-51CAD2345CEA

[FV.FvPostMemory]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = 3298afc4-c484-47f1-a65a-5917a54b5e8c

  FILE FV_IMAGE = B4705B4B-0BE6-4BDB-A83A-51CAD2345CEA {
    SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE {
      SECTION FV_IMAGE = FvPostMemoryUncompressed
    }
  }

#
# FvBsp includes board specific components
#
[FV.FvBspUncompressed]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = e4c65347-fd90-4143-8a41-113e1015fe07

[FV.FvBsp]
  !include MinPlatformPkg/Include/Fdf/CommonSpiFvHeaderInfo.fdf
  FvNameGuid         = 9e151cf3-ca90-444f-b33b-a9941cbc772f

  FILE FV_IMAGE = e4c65347-fd90-4143-8a41-113e1015fe07 {
    SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE {
      SECTION FV_IMAGE = FvBspUncompressed
    }
  }

!include MinPlatformPkg/Include/Fdf/RuleInclude.fdf